"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _part = /*#__PURE__*/ _interop_require_default(require("./node/bnf/part"));
var _name = /*#__PURE__*/ _interop_require_default(require("./node/bnf/name"));
var _rule = /*#__PURE__*/ _interop_require_default(require("./node/bnf/rule"));
var _error = /*#__PURE__*/ _interop_require_default(require("./node/bnf/error"));
var _epsilon = /*#__PURE__*/ _interop_require_default(require("./node/bnf/epsilon"));
var _document = /*#__PURE__*/ _interop_require_default(require("./node/bnf/document"));
var _ruleName = /*#__PURE__*/ _interop_require_default(require("./node/bnf/ruleName"));
var _wildcard = /*#__PURE__*/ _interop_require_default(require("./node/bnf/wildcard"));
var _endOfLine = /*#__PURE__*/ _interop_require_default(require("./node/bnf/endOfLine"));
var _partChoice = /*#__PURE__*/ _interop_require_default(require("./node/bnf/partChoice"));
var _precedence = /*#__PURE__*/ _interop_require_default(require("./node/bnf/precedence"));
var _quantifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/quantifier"));
var _definition = /*#__PURE__*/ _interop_require_default(require("./node/bnf/definition"));
var _definitions = /*#__PURE__*/ _interop_require_default(require("./node/bnf/definitions"));
var _terminalPart = /*#__PURE__*/ _interop_require_default(require("./node/bnf/terminalPart"));
var _choiceOfParts = /*#__PURE__*/ _interop_require_default(require("./node/bnf/choiceOfParts"));
var _terminalSymbol = /*#__PURE__*/ _interop_require_default(require("./node/bnf/terminalSymbol"));
var _nonTerminalPart = /*#__PURE__*/ _interop_require_default(require("./node/bnf/nonTerminalPart"));
var _sequenceOfParts = /*#__PURE__*/ _interop_require_default(require("./node/bnf/sequenceOfParts"));
var _opacityModifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/opacityModifier"));
var _noWhitespacePart = /*#__PURE__*/ _interop_require_default(require("./node/bnf/noWhitespacePart"));
var _callAheadModifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/callAheadModifier"));
var _regularExpression = /*#__PURE__*/ _interop_require_default(require("./node/bnf/regularExpression"));
var _startOfContentPart = /*#__PURE__*/ _interop_require_default(require("./node/bnf/startOfContentPart"));
var _optionalQuantifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/optionalQuantifier"));
var _oneOneOrMoreQuantifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/oneOneOrMoreQuantifier"));
var _significantTokenType = /*#__PURE__*/ _interop_require_default(require("./node/bnf/significantTokenType"));
var _zeroOneOrMoreQuantifier = /*#__PURE__*/ _interop_require_default(require("./node/bnf/zeroOneOrMoreQuantifier"));
var _ruleNames = require("./ruleNames");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var _obj;
var NonTerminalNodeMap = (_obj = {}, _define_property(_obj, _ruleNames.NAME_RULE_NAME, _name.default), _define_property(_obj, _ruleNames.PART_RULE_NAME, _part.default), _define_property(_obj, _ruleNames.RULE_RULE_NAME, _rule.default), _define_property(_obj, _ruleNames.ERROR_RULE_NAME, _error.default), _define_property(_obj, _ruleNames.EPSILON_RULE_NAME, _epsilon.default), _define_property(_obj, _ruleNames.DOCUMENT_RULE_NAME, _document.default), _define_property(_obj, _ruleNames.WILDCARD_RULE_NAME, _wildcard.default), _define_property(_obj, _ruleNames.RULE_NAME_RULE_NAME, _ruleName.default), _define_property(_obj, _ruleNames.DEFINITION_RULE_NAME, _definition.default), _define_property(_obj, _ruleNames.PRECEDENCE_RULE_NAME, _precedence.default), _define_property(_obj, _ruleNames.QUANTIFIER_RULE_NAME, _quantifier.default), _define_property(_obj, _ruleNames.END_OF_LINE_RULE_NAME, _endOfLine.default), _define_property(_obj, _ruleNames.PART_CHOICE_RULE_NAME, _partChoice.default), _define_property(_obj, _ruleNames.DEFINITIONS_RULE_NAME, _definitions.default), _define_property(_obj, _ruleNames.TERMINAL_PART_RULE_NAME, _terminalPart.default), _define_property(_obj, _ruleNames.CHOICE_OF_PARTS_RULE_NAME, _choiceOfParts.default), _define_property(_obj, _ruleNames.TERMINAL_SYMBOL_RULE_NAME, _terminalSymbol.default), _define_property(_obj, _ruleNames.OPACITY_MODIFIER_RULE_NAME, _opacityModifier.default), _define_property(_obj, _ruleNames.NON_TERMINAL_PART_RULE_NAME, _nonTerminalPart.default), _define_property(_obj, _ruleNames.SEQUENCE_OF_PARTS_RULE_NAME, _sequenceOfParts.default), _define_property(_obj, _ruleNames.NO_WHITESPACE_PART_RULE_NAME, _noWhitespacePart.default), _define_property(_obj, _ruleNames.REGULAR_EXPRESSION_RULE_NAME, _regularExpression.default), _define_property(_obj, _ruleNames.CALL_AHEAD_MODIFIER_RULE_NAME, _callAheadModifier.default), _define_property(_obj, _ruleNames.OPTIONAL_QUANTIFIER_RULE_NAME, _optionalQuantifier.default), _define_property(_obj, _ruleNames.START_OF_CONTENT_PART_RULE_NAME, _startOfContentPart.default), _define_property(_obj, _ruleNames.SIGNIFICANT_TOKEN_TYPE_RULE_NAME, _significantTokenType.default), _define_property(_obj, _ruleNames.ONE_OR_MORE_QUANTIFIER_RULE_NAME, _oneOneOrMoreQuantifier.default), _define_property(_obj, _ruleNames.ZERO_OR_MORE_QUANTIFIER_RULE_NAME, _zeroOneOrMoreQuantifier.default), _obj);
var _default = NonTerminalNodeMap;

//# sourceMappingURL=data:application/json;base64,